fastlane_require 'semantic'

default_platform(:ios)

platform :ios do

  desc "Update dependencies."
  lane :update_dependencies do
    # sh 'cd .. && carthage update --platform ios --use-ssh'
    sh 'cd .. && fastlane carthage_wrapper command:update platform:iOS use_ssh:true'
  end

  desc "Check for outdated carthage dependencies."
  lane :check_dependencies do
    sh 'cd .. && mkdir -p Artifacts && /usr/local/bin/carthage outdated --xcode-warnings --use-ssh > Artifacts/dependencies_report.txt'
  end

  desc "Run carthage in a wrapper that works with Xcode 12"
  lane :carthage_wrapper do |options|
    require 'tempfile'
    tmp = Tempfile.new('xcconfig')
    oldXcconfig = ENV['XCODE_XCCONFIG_FILE']
    ENV['XCODE_XCCONFIG_FILE'] = tmp.path
    begin
      tmp.write("EXCLUDED_ARCHS__EFFECTIVE_PLATFORM_SUFFIX_simulator__NATIVE_ARCH_64_BIT_x86_64__XCODE_1200 = arm64 arm64e armv7 armv7s armv6 armv8\n")
      tmp.write("EXCLUDED_ARCHS = $(inherited) $(EXCLUDED_ARCHS__EFFECTIVE_PLATFORM_SUFFIX_$(EFFECTIVE_PLATFORM_SUFFIX)__NATIVE_ARCH_64_BIT_$(NATIVE_ARCH_64_BIT)__XCODE_$(XCODE_VERSION_MAJOR))\n")
      tmp.flush

      carthage(options)
    ensure
      # Always delete the temp file
      tmp.close
      tmp.unlink
      ENV['XCODE_XCCONFIG_FILE'] = oldXcconfig
    end
  end
end
